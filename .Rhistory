simulate_lln <- function(n,mu,sigma){
#generer un echantillon de taille n
x <- rnorm(n,mean = mu,sd=sigma)
#calculer la moyenne de l'echantillon
x_bar <- mean(x)
#retourner la moyenne et l'ecart-type
return(c(moyenne = x_bar, ecart_type = sd(x)))
}
simulate_lln(12,23,433)
loigrandnombre::simulate_lln(5,4,0.5)
library(readxl)
Classeur1 <- read_excel("C:\\Users\\Admin\\Desktop\\Classeur1.xlsx")
View(Classeur1)
summary(test)
summary(Classeur1)
boxplot(Classeur1)
library(ggplot2)
boxplot(Classeur1)
library(ggplot2)
ggplot(Classeur1)+ geom_boxplot()
ggplot(Classeur1)+ geom_boxplot(na.rm = TRUE)
ggplot(Classeur1, aes(x="frequence",y="moyenne"))+ geom_boxplot(na.rm = TRUE)
library(readxl)
Classeur1 <- read_excel("C:\\Users\\Admin\\Desktop\\Classeur1.xlsx",
col_names = FALSE)
View(Classeur1)
summary(Classeur1)
library(ggplot2)
ggplot(Classeur1, aes(x="frequence",y="moyenne"))+ geom_boxplot(na.rm = TRUE)
boxplot(Classeur1)
sd(Classeur1$...1)
mean(Classeur1$...1)
var(Classeur1$...1)
hist(Classeur1)
hist(Classeur1$...1)
library(readxl)
Classeur2 <- read_excel("C:\\Users\\Admin\\Desktop\\Classeur2.xlsx",
col_names = FALSE)
View(Classeur2)
library(ggplot2)
summary(Classeur1)
boxplot(Classeur1)
summary(Classeur1)
boxplot(Classeur2)
sd(Classeur2$...1)
sd(Classeur2$...1, na.rm = TRUE)
mean(Classeur2$...1,na.rm = TRUE)
var(Classeur2$...1,na.rm = TRUE)
hist(Classeur2$...1,na.rm = TRUE)
boxplot(Classeur2)
boxplot(Classeur2)
sd(Classeur2$...1, na.rm = TRUE)
mean(Classeur2$...1,na.rm = TRUE)
var(Classeur2$...1,na.rm = TRUE)
hist(Classeur2$...1,na.rm = TRUE)
loigrandnombre::simulate_lln(12,23,334)
beta1=0
beta2=1
b=0
n=seq(20,10000,by=20)
for (i in 500) {
eps <- rnorm(n[i],0,1)
x=rnorm(n[i],9,2)
y=beta1+beta2*x+eps
m=lm(y-x)
b[i]=m
}
beta1=0
beta2=1
b=0
n=seq(20,10000,by=20)
for (i in 500) {
eps <- rnorm(n[i],0,1)
x=rnorm(n[i],9,2)
y=beta1+beta2*x+eps
m=lm(y-x)
b[i]=m
}
plot(n,b,type="l")
abline(1,0,col="blue", size=2)
e=0.01
abline(1+e,0,col="red",size=2)
abline(1-e,0,col="red",size=2)
dev.off()
beta1=0
beta2=1
b=0
n=seq(20,10000,by=20)
for (i in 500) {
eps <- rnorm(n[i],0,1)
x=rnorm(n[i],9,1)
y=beta1+beta2*x+eps
m=lm(y-x)
b[i]=m
}
plot(n,b,type="l")
repartition_function <- dbinom(20,30,0.75)
repartition_function <- function(succes,epreuve,prob){
dbinom(20,30,0.75)
}
repartition_function(20,30,0.75)
repartition_function <- function(succes,epreuve,prob){
dbinom(succes,epreuve,prob)
}
repartition_function(20,30,0.75)
loigrandnombre::repartition_function(3,68,.5)
loigrandnombre::repartition_function(3:8,68,.5)
loiprobabilite_function <- function(succes,epreuve,prob){
pbinom(succes,epreuve,prob)
}
loiprobabilite_function(20,30,.75)
loigrandnombre::
data(mpg)
library(tidyverse)
data(mpg)
library(tidyverse)
data(mpg)
mpg
ggplot(mpg, aes(hwy,displ))+
geom_point()
ggplot(mpg, aes(hwy,displ))+
geom_point(col="red")
ggplot(mpg, aes(hwy,displ))+
geom_point(col="red",size=.1)
ggplot(mpg, aes(hwy,displ))+
geom_point(col="red",size=.3)
ggplot(mpg, aes(hwy,displ))+
geom_point(col="red",size=1)
library(tidyverse)
data(mpg)
mpg
ggplot(mpg, aes(hwy,displ))+
geom_point(col="red",size=1)
library(tidyverse)
data(mpg)
mpg
ggplot(mpg, aes(hwy,displ,colour = manufacturer))+
geom_point(col="red",size=1)
library(tidyverse)
data(mpg)
mpg
ggplot(mpg, aes(hwy,displ,colour = manufacturer))+
geom_point(size=1)
?hwy
??hwd
?mpg
library(tidyverse)
data(mpg)
mpg
ggplot(mpg, aes(hwy,displ))+
geom_point(size=manufacturer)
library(tidyverse)
data(mpg)
mpg
ggplot(mpg, aes(hwy,displ))+
geom_point(size=class)
library(tidyverse)
data(mpg)
mpg
ggplot(mpg, aes(hwy,displ,size=class))+
geom_point()
ggplot(mpg, aes(hwy,displ,colour=class))+
geom_point()
ggplot(mpg, aes(hwy,displ,shape=class))+
geom_point()
ggplot(mpg, aes(hwy,displ,shape=class,colour = manufacturer))+
geom_point()
ggplot(mpg, aes(hwy,displ,alpha =class,colour = manufacturer))+
geom_point()
ggplot(mpg, aes(hwy,displ,alpha =class,colour = "orange"))+
geom_point()
ggplot(mpg, aes(hwy,displ,alpha =class,colour = "orange"))+
geom_point()
facet_wrap(~class)
#facet_wrap(~class,nrow = 2)
facet_grid(drv~cyl)
?mpg
ggplot(mpg)+geom_smooth(displ,hwy)
library(tidyverse)
ggplot(mpg)+geom_smooth(displ,hwy)
ggplot(mpg)+geom_smooth(displ,hwy)
ggplot(mpg)+geom_smooth(aes(displ,hwy))
linetype=drv
library(tidyverse)
ggplot(mpg)+geom_smooth(aes(displ,hwy))
linetype=drv
ggplot(mpg)+geom_smooth(aes(displ,hwy,linetype = drv))
ggplot(mpg)+geom_smooth(aes(displ,hwy,linetype = drv))+
geom_point()
library(tidyverse)
ggplot(mpg)+geom_smooth(aes(displ,hwy,linetype = drv))+
geom_point()
library(tidyverse)
ggplot(mpg)+geom_smooth(aes(displ,hwy,linetype = drv))+
geom_point()
library(tidyverse)
ggplot(mpg)+#geom_smooth(aes(displ,hwy,linetype = drv))
geom_point()
library(tidyverse)
ggplot(mpg)+geom_smooth(aes(displ,hwy,linetype = drv))
geom_point(colour="manufacturer")
library(tidyverse)
ggplot(mpg)+
geom_smooth(aes(displ,hwy,linetype = drv))+
geom_point(colour="manufacturer")
library(tidyverse)
ggplot(mpg)+
geom_smooth(aes(displ,hwy,linetype = drv))+
geom_point(aes(displ,hwy,colour = drv))
ggplot(mpg)+
geom_smooth(aes(displ,hwy,linetype = drv))+
geom_point(aes(displ,hwy,colour = "manufacturer"))
ggplot(mpg)+
geom_smooth(aes(displ,hwy,linetype = drv))+
geom_point(aes(displ,hwy,colour = "manufacturer",fill = drv))
ggplot(mpg)+
geom_smooth(aes(displ,hwy,linetype = drv,fill = drv))+
geom_point(aes(displ,hwy,colour = drv))
loigrandnombre::loinormale_function(19,34,.0)
loigrandnombre::loinormale_function(19,34,.5)
library(readxl)
Classeur2 <- read_excel("R/exemple/Classeur2.xlsx",
col_names = FALSE)
View(Classeur2)
library(ggplot2)
boxplot(Classeur2)
sd(Classeur2$...1, na.rm = TRUE)
mean(Classeur2$...1,na.rm = TRUE)
sd(Classeur2$...2, na.rm = TRUE)
mean(Classeur2$...2,na.rm = TRUE)
loigrandnombre::loiprobabilite_function(20,43,.5)
loigrandnombre::loinormale_function(1,34,,9)
loigrandnombre::loinormale_function(1,34,.9)
hist(Classeur2$...1,na.rm = TRUE)
dataset_dice <- read.csv("C:/Users/Admin/Desktop/dataset_dice.csv", na.strings="", stringsAsFactors=TRUE)
View(dataset_dice)
donnees <- dataset_dice$Joueur1
#fonction de calcul des moyennes successives
moyennes_successives <- function(donnees, taille_fenetre){
moyennes <- rep(NA,length(donnees)-taille_fenetre+1)
for (i in 1:(length(donnees)-taille_fenetre+1)) {
moyennes[i] <- mean(donnees[i:(i+taille_fenetre-1)])
}
return(moyennes)
moyennes_successives
donnees <- dataset_dice$Joueur1
#fonction de calcul des moyennes successives
moyennes_successives <- function(donnees, taille_fenetre){
moyennes <- rep(NA,length(donnees)-taille_fenetre+1)
for (i in 1:(length(donnees)-taille_fenetre+1)) {
moyennes[i] <- mean(donnees[i:(i+taille_fenetre-1)])
}
return(moyennes)
}
donnees <- dataset_dice$Joueur1
#fonction de calcul des moyennes successives
moyennes_successives <- function(donnees, taille_fenetre){
moyennes <- rep(NA,length(donnees)-taille_fenetre+1)
for (i in 1:(length(donnees)-taille_fenetre+1)) {
moyennes[i] <- mean(donnees[i:(i+taille_fenetre-1)])
}
return(moyennes)
}
donnees <- dataset_dice$Joueur1
)
donnees <- dataset_dice$Joueur1
#fonction de calcul des moyennes successives
moyennes_successives <- function(donnees, taille_fenetre){
moyennes <- rep(NA,length(donnees)-taille_fenetre+1)
for (i in 1:(length(donnees)-taille_fenetre+1)) {
moyennes[i] <- mean(donnees[i:(i+taille_fenetre-1)])
}
return(moyennes)
}
moyennes_successives(donnees = dataset_dice$Joueur1,100)
moyennes_successives(donnees = dataset_dice$Joueur1,10)
moyennes_successives(donnees,100)
donnees <- dataset_dice$Joueur2
#fonction de calcul des moyennes successives
moyennes_successives <- function(donnees, taille_fenetre){
moyennes <- rep(NA,length(donnees)-taille_fenetre+1)
for (i in 1:(length(donnees)-taille_fenetre+1)) {
moyennes[i] <- mean(donnees[i:(i+taille_fenetre-1)])
}
return(moyennes)
}
moyennes_successives(donnees,33)
moyennes_successives(donnees,32)
moyennes_successives(donnees,32,na.rm=TRUE)
donnees <- dataset_dice
#fonction de calcul des moyennes successives
moyennes_successives <- function(donnees, taille_fenetre){
moyennes <- rep(NA,length(donnees)-taille_fenetre+1)
for (i in 1:(length(donnees)-taille_fenetre+1)) {
moyennes[i] <- mean(donnees[i:(i+taille_fenetre-1)])
}
return(moyennes)
}
moyennes_successives(donnees,3)
